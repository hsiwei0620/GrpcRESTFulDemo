// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: APISHTEQio.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MqGrpcProject {

  /// <summary>Holder for reflection information generated from APISHTEQio.proto</summary>
  public static partial class APISHTEQioReflection {

    #region Descriptor
    /// <summary>File descriptor for APISHTEQio.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static APISHTEQioReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBBUElTSFRFUWlvLnByb3RvEg1NcUdycGNQcm9qZWN0ImMKEEFQSVNIVEVR",
            "X1JlcXVlc3QSDgoGZXFwdGlkGAEgASgJEg0KBXNncmlkGAIgASgJEg8KB254",
            "b3Blbm8YAyABKAkSDQoFbG90aWQYBCABKAkSEAoIc2VydmVyaXAYBSABKAki",
            "mwIKDkFQSVNIVEVRX1JlcGx5Eg0KBXRyeGlkGAEgASgJEg4KBnR5cGVpZBgC",
            "IAEoCRIPCgdydG5jb2RlGAMgASgJEg8KB3J0bm1lc2cYBCABKAkSDgoGZXFw",
            "dGlkGAUgASgJEg8KB2VxcHRkc2MYBiABKAkSEAoIZXFwdGNhdGUYByABKAkS",
            "EAoIcmVjaXBlaWQYCCABKAkSEAoIZXFwdHN0YXQYCSABKAkSEwoLZXFwdHN0",
            "YXRkc2MYCiABKAkSEAoIZXFwdG1vZGUYCyABKAkSDgoGc2dyY250GAwgASgJ",
            "EioKBW9hcnkxGA0gAygLMhsuTXFHcnBjUHJvamVjdC5BUElTSFRFUW9fYTES",
            "DgoGZXJybXNnGA4gASgJIlwKDEFQSVNIVEVRb19hMRINCgVzZ3JpZBgBIAEo",
            "CRIRCglzaHRhcnljbnQYAiABKAkSKgoFb2FyeTIYAyADKAsyGy5NcUdycGNQ",
            "cm9qZWN0LkFQSVNIVEVRb19hMiK/AwoMQVBJU0hURVFvX2EyEg0KBXNodGlk",
            "GAEgASgJEg8KB3NodHN0YXQYAiABKAkSDQoFbG90aWQYAyABKAkSDgoGc3Bs",
            "dGlkGAQgASgJEhMKC254cm91dGVjYXRlGAUgASgJEhEKCW54cm91dGVpZBgG",
            "IAEoCRISCgpueHJvdXRldmVyGAcgASgJEg8KB2Nyb3Blbm8YCCABKAkSDwoH",
            "bnhvcGVubxgJIAEoCRIPCgdueG9wZWlkGAogASgJEhAKCG54b3BldmVyGAsg",
            "ASgJEhAKCG54b3BlZHNjGAwgASgJEhAKCG54cGVwbHZsGA0gASgJEhIKCm54",
            "cmVjaXBlaWQYDiABKAkSEAoIbnhwcm9jaWQYDyABKAkSEQoJcHJvZHVjdGlk",
            "GBAgASgJEg4KBmVjY29kZRgRIAEoCRIMCgR1bml0GBIgASgJEg0KBXNncmlk",
            "GBMgASgJEg4KBnNodGNudBgUIAEoCRIRCgltb3ZlaW5mbGcYFSABKAkSDgoG",
            "c2xvdG5vGBYgASgJEhAKCHNob3dmbGFnGBcgASgJEg4KBmZha2VpZBgYIAEo",
            "CRIQCghlcnBsb3RubxgZIAEoCUIzChVpby5ncnBjLk1xR3JwY1Byb2plY3RC",
            "Ek1xR3JwY1Byb2plY3RQcm90b1ABogIDSExXYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MqGrpcProject.APISHTEQ_Request), global::MqGrpcProject.APISHTEQ_Request.Parser, new[]{ "Eqptid", "Sgrid", "Nxopeno", "Lotid", "Serverip" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MqGrpcProject.APISHTEQ_Reply), global::MqGrpcProject.APISHTEQ_Reply.Parser, new[]{ "Trxid", "Typeid", "Rtncode", "Rtnmesg", "Eqptid", "Eqptdsc", "Eqptcate", "Recipeid", "Eqptstat", "Eqptstatdsc", "Eqptmode", "Sgrcnt", "Oary1", "Errmsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MqGrpcProject.APISHTEQo_a1), global::MqGrpcProject.APISHTEQo_a1.Parser, new[]{ "Sgrid", "Shtarycnt", "Oary2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MqGrpcProject.APISHTEQo_a2), global::MqGrpcProject.APISHTEQo_a2.Parser, new[]{ "Shtid", "Shtstat", "Lotid", "Spltid", "Nxroutecate", "Nxrouteid", "Nxroutever", "Cropeno", "Nxopeno", "Nxopeid", "Nxopever", "Nxopedsc", "Nxpeplvl", "Nxrecipeid", "Nxprocid", "Productid", "Eccode", "Unit", "Sgrid", "Shtcnt", "Moveinflg", "Slotno", "Showflag", "Fakeid", "Erplotno" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class APISHTEQ_Request : pb::IMessage<APISHTEQ_Request> {
    private static readonly pb::MessageParser<APISHTEQ_Request> _parser = new pb::MessageParser<APISHTEQ_Request>(() => new APISHTEQ_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APISHTEQ_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MqGrpcProject.APISHTEQioReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQ_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQ_Request(APISHTEQ_Request other) : this() {
      eqptid_ = other.eqptid_;
      sgrid_ = other.sgrid_;
      nxopeno_ = other.nxopeno_;
      lotid_ = other.lotid_;
      serverip_ = other.serverip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQ_Request Clone() {
      return new APISHTEQ_Request(this);
    }

    /// <summary>Field number for the "eqptid" field.</summary>
    public const int EqptidFieldNumber = 1;
    private string eqptid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Eqptid {
      get { return eqptid_; }
      set {
        eqptid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sgrid" field.</summary>
    public const int SgridFieldNumber = 2;
    private string sgrid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sgrid {
      get { return sgrid_; }
      set {
        sgrid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nxopeno" field.</summary>
    public const int NxopenoFieldNumber = 3;
    private string nxopeno_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nxopeno {
      get { return nxopeno_; }
      set {
        nxopeno_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lotid" field.</summary>
    public const int LotidFieldNumber = 4;
    private string lotid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lotid {
      get { return lotid_; }
      set {
        lotid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serverip" field.</summary>
    public const int ServeripFieldNumber = 5;
    private string serverip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Serverip {
      get { return serverip_; }
      set {
        serverip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APISHTEQ_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APISHTEQ_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Eqptid != other.Eqptid) return false;
      if (Sgrid != other.Sgrid) return false;
      if (Nxopeno != other.Nxopeno) return false;
      if (Lotid != other.Lotid) return false;
      if (Serverip != other.Serverip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Eqptid.Length != 0) hash ^= Eqptid.GetHashCode();
      if (Sgrid.Length != 0) hash ^= Sgrid.GetHashCode();
      if (Nxopeno.Length != 0) hash ^= Nxopeno.GetHashCode();
      if (Lotid.Length != 0) hash ^= Lotid.GetHashCode();
      if (Serverip.Length != 0) hash ^= Serverip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Eqptid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Eqptid);
      }
      if (Sgrid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sgrid);
      }
      if (Nxopeno.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nxopeno);
      }
      if (Lotid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Lotid);
      }
      if (Serverip.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Serverip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Eqptid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Eqptid);
      }
      if (Sgrid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sgrid);
      }
      if (Nxopeno.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nxopeno);
      }
      if (Lotid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lotid);
      }
      if (Serverip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Serverip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APISHTEQ_Request other) {
      if (other == null) {
        return;
      }
      if (other.Eqptid.Length != 0) {
        Eqptid = other.Eqptid;
      }
      if (other.Sgrid.Length != 0) {
        Sgrid = other.Sgrid;
      }
      if (other.Nxopeno.Length != 0) {
        Nxopeno = other.Nxopeno;
      }
      if (other.Lotid.Length != 0) {
        Lotid = other.Lotid;
      }
      if (other.Serverip.Length != 0) {
        Serverip = other.Serverip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Eqptid = input.ReadString();
            break;
          }
          case 18: {
            Sgrid = input.ReadString();
            break;
          }
          case 26: {
            Nxopeno = input.ReadString();
            break;
          }
          case 34: {
            Lotid = input.ReadString();
            break;
          }
          case 42: {
            Serverip = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class APISHTEQ_Reply : pb::IMessage<APISHTEQ_Reply> {
    private static readonly pb::MessageParser<APISHTEQ_Reply> _parser = new pb::MessageParser<APISHTEQ_Reply>(() => new APISHTEQ_Reply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APISHTEQ_Reply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MqGrpcProject.APISHTEQioReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQ_Reply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQ_Reply(APISHTEQ_Reply other) : this() {
      trxid_ = other.trxid_;
      typeid_ = other.typeid_;
      rtncode_ = other.rtncode_;
      rtnmesg_ = other.rtnmesg_;
      eqptid_ = other.eqptid_;
      eqptdsc_ = other.eqptdsc_;
      eqptcate_ = other.eqptcate_;
      recipeid_ = other.recipeid_;
      eqptstat_ = other.eqptstat_;
      eqptstatdsc_ = other.eqptstatdsc_;
      eqptmode_ = other.eqptmode_;
      sgrcnt_ = other.sgrcnt_;
      oary1_ = other.oary1_.Clone();
      errmsg_ = other.errmsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQ_Reply Clone() {
      return new APISHTEQ_Reply(this);
    }

    /// <summary>Field number for the "trxid" field.</summary>
    public const int TrxidFieldNumber = 1;
    private string trxid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Trxid {
      get { return trxid_; }
      set {
        trxid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "typeid" field.</summary>
    public const int TypeidFieldNumber = 2;
    private string typeid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Typeid {
      get { return typeid_; }
      set {
        typeid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rtncode" field.</summary>
    public const int RtncodeFieldNumber = 3;
    private string rtncode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rtncode {
      get { return rtncode_; }
      set {
        rtncode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rtnmesg" field.</summary>
    public const int RtnmesgFieldNumber = 4;
    private string rtnmesg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rtnmesg {
      get { return rtnmesg_; }
      set {
        rtnmesg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eqptid" field.</summary>
    public const int EqptidFieldNumber = 5;
    private string eqptid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Eqptid {
      get { return eqptid_; }
      set {
        eqptid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eqptdsc" field.</summary>
    public const int EqptdscFieldNumber = 6;
    private string eqptdsc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Eqptdsc {
      get { return eqptdsc_; }
      set {
        eqptdsc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eqptcate" field.</summary>
    public const int EqptcateFieldNumber = 7;
    private string eqptcate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Eqptcate {
      get { return eqptcate_; }
      set {
        eqptcate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recipeid" field.</summary>
    public const int RecipeidFieldNumber = 8;
    private string recipeid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Recipeid {
      get { return recipeid_; }
      set {
        recipeid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eqptstat" field.</summary>
    public const int EqptstatFieldNumber = 9;
    private string eqptstat_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Eqptstat {
      get { return eqptstat_; }
      set {
        eqptstat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eqptstatdsc" field.</summary>
    public const int EqptstatdscFieldNumber = 10;
    private string eqptstatdsc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Eqptstatdsc {
      get { return eqptstatdsc_; }
      set {
        eqptstatdsc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eqptmode" field.</summary>
    public const int EqptmodeFieldNumber = 11;
    private string eqptmode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Eqptmode {
      get { return eqptmode_; }
      set {
        eqptmode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sgrcnt" field.</summary>
    public const int SgrcntFieldNumber = 12;
    private string sgrcnt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sgrcnt {
      get { return sgrcnt_; }
      set {
        sgrcnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oary1" field.</summary>
    public const int Oary1FieldNumber = 13;
    private static readonly pb::FieldCodec<global::MqGrpcProject.APISHTEQo_a1> _repeated_oary1_codec
        = pb::FieldCodec.ForMessage(106, global::MqGrpcProject.APISHTEQo_a1.Parser);
    private readonly pbc::RepeatedField<global::MqGrpcProject.APISHTEQo_a1> oary1_ = new pbc::RepeatedField<global::MqGrpcProject.APISHTEQo_a1>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MqGrpcProject.APISHTEQo_a1> Oary1 {
      get { return oary1_; }
    }

    /// <summary>Field number for the "errmsg" field.</summary>
    public const int ErrmsgFieldNumber = 14;
    private string errmsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Errmsg {
      get { return errmsg_; }
      set {
        errmsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APISHTEQ_Reply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APISHTEQ_Reply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Trxid != other.Trxid) return false;
      if (Typeid != other.Typeid) return false;
      if (Rtncode != other.Rtncode) return false;
      if (Rtnmesg != other.Rtnmesg) return false;
      if (Eqptid != other.Eqptid) return false;
      if (Eqptdsc != other.Eqptdsc) return false;
      if (Eqptcate != other.Eqptcate) return false;
      if (Recipeid != other.Recipeid) return false;
      if (Eqptstat != other.Eqptstat) return false;
      if (Eqptstatdsc != other.Eqptstatdsc) return false;
      if (Eqptmode != other.Eqptmode) return false;
      if (Sgrcnt != other.Sgrcnt) return false;
      if(!oary1_.Equals(other.oary1_)) return false;
      if (Errmsg != other.Errmsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Trxid.Length != 0) hash ^= Trxid.GetHashCode();
      if (Typeid.Length != 0) hash ^= Typeid.GetHashCode();
      if (Rtncode.Length != 0) hash ^= Rtncode.GetHashCode();
      if (Rtnmesg.Length != 0) hash ^= Rtnmesg.GetHashCode();
      if (Eqptid.Length != 0) hash ^= Eqptid.GetHashCode();
      if (Eqptdsc.Length != 0) hash ^= Eqptdsc.GetHashCode();
      if (Eqptcate.Length != 0) hash ^= Eqptcate.GetHashCode();
      if (Recipeid.Length != 0) hash ^= Recipeid.GetHashCode();
      if (Eqptstat.Length != 0) hash ^= Eqptstat.GetHashCode();
      if (Eqptstatdsc.Length != 0) hash ^= Eqptstatdsc.GetHashCode();
      if (Eqptmode.Length != 0) hash ^= Eqptmode.GetHashCode();
      if (Sgrcnt.Length != 0) hash ^= Sgrcnt.GetHashCode();
      hash ^= oary1_.GetHashCode();
      if (Errmsg.Length != 0) hash ^= Errmsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Trxid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Trxid);
      }
      if (Typeid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Typeid);
      }
      if (Rtncode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Rtncode);
      }
      if (Rtnmesg.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Rtnmesg);
      }
      if (Eqptid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Eqptid);
      }
      if (Eqptdsc.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Eqptdsc);
      }
      if (Eqptcate.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Eqptcate);
      }
      if (Recipeid.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Recipeid);
      }
      if (Eqptstat.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Eqptstat);
      }
      if (Eqptstatdsc.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Eqptstatdsc);
      }
      if (Eqptmode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Eqptmode);
      }
      if (Sgrcnt.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Sgrcnt);
      }
      oary1_.WriteTo(output, _repeated_oary1_codec);
      if (Errmsg.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Errmsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Trxid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Trxid);
      }
      if (Typeid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Typeid);
      }
      if (Rtncode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rtncode);
      }
      if (Rtnmesg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rtnmesg);
      }
      if (Eqptid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Eqptid);
      }
      if (Eqptdsc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Eqptdsc);
      }
      if (Eqptcate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Eqptcate);
      }
      if (Recipeid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Recipeid);
      }
      if (Eqptstat.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Eqptstat);
      }
      if (Eqptstatdsc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Eqptstatdsc);
      }
      if (Eqptmode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Eqptmode);
      }
      if (Sgrcnt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sgrcnt);
      }
      size += oary1_.CalculateSize(_repeated_oary1_codec);
      if (Errmsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Errmsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APISHTEQ_Reply other) {
      if (other == null) {
        return;
      }
      if (other.Trxid.Length != 0) {
        Trxid = other.Trxid;
      }
      if (other.Typeid.Length != 0) {
        Typeid = other.Typeid;
      }
      if (other.Rtncode.Length != 0) {
        Rtncode = other.Rtncode;
      }
      if (other.Rtnmesg.Length != 0) {
        Rtnmesg = other.Rtnmesg;
      }
      if (other.Eqptid.Length != 0) {
        Eqptid = other.Eqptid;
      }
      if (other.Eqptdsc.Length != 0) {
        Eqptdsc = other.Eqptdsc;
      }
      if (other.Eqptcate.Length != 0) {
        Eqptcate = other.Eqptcate;
      }
      if (other.Recipeid.Length != 0) {
        Recipeid = other.Recipeid;
      }
      if (other.Eqptstat.Length != 0) {
        Eqptstat = other.Eqptstat;
      }
      if (other.Eqptstatdsc.Length != 0) {
        Eqptstatdsc = other.Eqptstatdsc;
      }
      if (other.Eqptmode.Length != 0) {
        Eqptmode = other.Eqptmode;
      }
      if (other.Sgrcnt.Length != 0) {
        Sgrcnt = other.Sgrcnt;
      }
      oary1_.Add(other.oary1_);
      if (other.Errmsg.Length != 0) {
        Errmsg = other.Errmsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Trxid = input.ReadString();
            break;
          }
          case 18: {
            Typeid = input.ReadString();
            break;
          }
          case 26: {
            Rtncode = input.ReadString();
            break;
          }
          case 34: {
            Rtnmesg = input.ReadString();
            break;
          }
          case 42: {
            Eqptid = input.ReadString();
            break;
          }
          case 50: {
            Eqptdsc = input.ReadString();
            break;
          }
          case 58: {
            Eqptcate = input.ReadString();
            break;
          }
          case 66: {
            Recipeid = input.ReadString();
            break;
          }
          case 74: {
            Eqptstat = input.ReadString();
            break;
          }
          case 82: {
            Eqptstatdsc = input.ReadString();
            break;
          }
          case 90: {
            Eqptmode = input.ReadString();
            break;
          }
          case 98: {
            Sgrcnt = input.ReadString();
            break;
          }
          case 106: {
            oary1_.AddEntriesFrom(input, _repeated_oary1_codec);
            break;
          }
          case 114: {
            Errmsg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class APISHTEQo_a1 : pb::IMessage<APISHTEQo_a1> {
    private static readonly pb::MessageParser<APISHTEQo_a1> _parser = new pb::MessageParser<APISHTEQo_a1>(() => new APISHTEQo_a1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APISHTEQo_a1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MqGrpcProject.APISHTEQioReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQo_a1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQo_a1(APISHTEQo_a1 other) : this() {
      sgrid_ = other.sgrid_;
      shtarycnt_ = other.shtarycnt_;
      oary2_ = other.oary2_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQo_a1 Clone() {
      return new APISHTEQo_a1(this);
    }

    /// <summary>Field number for the "sgrid" field.</summary>
    public const int SgridFieldNumber = 1;
    private string sgrid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sgrid {
      get { return sgrid_; }
      set {
        sgrid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shtarycnt" field.</summary>
    public const int ShtarycntFieldNumber = 2;
    private string shtarycnt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Shtarycnt {
      get { return shtarycnt_; }
      set {
        shtarycnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oary2" field.</summary>
    public const int Oary2FieldNumber = 3;
    private static readonly pb::FieldCodec<global::MqGrpcProject.APISHTEQo_a2> _repeated_oary2_codec
        = pb::FieldCodec.ForMessage(26, global::MqGrpcProject.APISHTEQo_a2.Parser);
    private readonly pbc::RepeatedField<global::MqGrpcProject.APISHTEQo_a2> oary2_ = new pbc::RepeatedField<global::MqGrpcProject.APISHTEQo_a2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MqGrpcProject.APISHTEQo_a2> Oary2 {
      get { return oary2_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APISHTEQo_a1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APISHTEQo_a1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sgrid != other.Sgrid) return false;
      if (Shtarycnt != other.Shtarycnt) return false;
      if(!oary2_.Equals(other.oary2_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sgrid.Length != 0) hash ^= Sgrid.GetHashCode();
      if (Shtarycnt.Length != 0) hash ^= Shtarycnt.GetHashCode();
      hash ^= oary2_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sgrid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Sgrid);
      }
      if (Shtarycnt.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Shtarycnt);
      }
      oary2_.WriteTo(output, _repeated_oary2_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sgrid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sgrid);
      }
      if (Shtarycnt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Shtarycnt);
      }
      size += oary2_.CalculateSize(_repeated_oary2_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APISHTEQo_a1 other) {
      if (other == null) {
        return;
      }
      if (other.Sgrid.Length != 0) {
        Sgrid = other.Sgrid;
      }
      if (other.Shtarycnt.Length != 0) {
        Shtarycnt = other.Shtarycnt;
      }
      oary2_.Add(other.oary2_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Sgrid = input.ReadString();
            break;
          }
          case 18: {
            Shtarycnt = input.ReadString();
            break;
          }
          case 26: {
            oary2_.AddEntriesFrom(input, _repeated_oary2_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class APISHTEQo_a2 : pb::IMessage<APISHTEQo_a2> {
    private static readonly pb::MessageParser<APISHTEQo_a2> _parser = new pb::MessageParser<APISHTEQo_a2>(() => new APISHTEQo_a2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APISHTEQo_a2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MqGrpcProject.APISHTEQioReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQo_a2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQo_a2(APISHTEQo_a2 other) : this() {
      shtid_ = other.shtid_;
      shtstat_ = other.shtstat_;
      lotid_ = other.lotid_;
      spltid_ = other.spltid_;
      nxroutecate_ = other.nxroutecate_;
      nxrouteid_ = other.nxrouteid_;
      nxroutever_ = other.nxroutever_;
      cropeno_ = other.cropeno_;
      nxopeno_ = other.nxopeno_;
      nxopeid_ = other.nxopeid_;
      nxopever_ = other.nxopever_;
      nxopedsc_ = other.nxopedsc_;
      nxpeplvl_ = other.nxpeplvl_;
      nxrecipeid_ = other.nxrecipeid_;
      nxprocid_ = other.nxprocid_;
      productid_ = other.productid_;
      eccode_ = other.eccode_;
      unit_ = other.unit_;
      sgrid_ = other.sgrid_;
      shtcnt_ = other.shtcnt_;
      moveinflg_ = other.moveinflg_;
      slotno_ = other.slotno_;
      showflag_ = other.showflag_;
      fakeid_ = other.fakeid_;
      erplotno_ = other.erplotno_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APISHTEQo_a2 Clone() {
      return new APISHTEQo_a2(this);
    }

    /// <summary>Field number for the "shtid" field.</summary>
    public const int ShtidFieldNumber = 1;
    private string shtid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Shtid {
      get { return shtid_; }
      set {
        shtid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shtstat" field.</summary>
    public const int ShtstatFieldNumber = 2;
    private string shtstat_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Shtstat {
      get { return shtstat_; }
      set {
        shtstat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lotid" field.</summary>
    public const int LotidFieldNumber = 3;
    private string lotid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lotid {
      get { return lotid_; }
      set {
        lotid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spltid" field.</summary>
    public const int SpltidFieldNumber = 4;
    private string spltid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Spltid {
      get { return spltid_; }
      set {
        spltid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nxroutecate" field.</summary>
    public const int NxroutecateFieldNumber = 5;
    private string nxroutecate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nxroutecate {
      get { return nxroutecate_; }
      set {
        nxroutecate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nxrouteid" field.</summary>
    public const int NxrouteidFieldNumber = 6;
    private string nxrouteid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nxrouteid {
      get { return nxrouteid_; }
      set {
        nxrouteid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nxroutever" field.</summary>
    public const int NxrouteverFieldNumber = 7;
    private string nxroutever_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nxroutever {
      get { return nxroutever_; }
      set {
        nxroutever_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cropeno" field.</summary>
    public const int CropenoFieldNumber = 8;
    private string cropeno_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cropeno {
      get { return cropeno_; }
      set {
        cropeno_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nxopeno" field.</summary>
    public const int NxopenoFieldNumber = 9;
    private string nxopeno_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nxopeno {
      get { return nxopeno_; }
      set {
        nxopeno_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nxopeid" field.</summary>
    public const int NxopeidFieldNumber = 10;
    private string nxopeid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nxopeid {
      get { return nxopeid_; }
      set {
        nxopeid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nxopever" field.</summary>
    public const int NxopeverFieldNumber = 11;
    private string nxopever_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nxopever {
      get { return nxopever_; }
      set {
        nxopever_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nxopedsc" field.</summary>
    public const int NxopedscFieldNumber = 12;
    private string nxopedsc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nxopedsc {
      get { return nxopedsc_; }
      set {
        nxopedsc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nxpeplvl" field.</summary>
    public const int NxpeplvlFieldNumber = 13;
    private string nxpeplvl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nxpeplvl {
      get { return nxpeplvl_; }
      set {
        nxpeplvl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nxrecipeid" field.</summary>
    public const int NxrecipeidFieldNumber = 14;
    private string nxrecipeid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nxrecipeid {
      get { return nxrecipeid_; }
      set {
        nxrecipeid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nxprocid" field.</summary>
    public const int NxprocidFieldNumber = 15;
    private string nxprocid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nxprocid {
      get { return nxprocid_; }
      set {
        nxprocid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "productid" field.</summary>
    public const int ProductidFieldNumber = 16;
    private string productid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Productid {
      get { return productid_; }
      set {
        productid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eccode" field.</summary>
    public const int EccodeFieldNumber = 17;
    private string eccode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Eccode {
      get { return eccode_; }
      set {
        eccode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 18;
    private string unit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Unit {
      get { return unit_; }
      set {
        unit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sgrid" field.</summary>
    public const int SgridFieldNumber = 19;
    private string sgrid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sgrid {
      get { return sgrid_; }
      set {
        sgrid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shtcnt" field.</summary>
    public const int ShtcntFieldNumber = 20;
    private string shtcnt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Shtcnt {
      get { return shtcnt_; }
      set {
        shtcnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "moveinflg" field.</summary>
    public const int MoveinflgFieldNumber = 21;
    private string moveinflg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Moveinflg {
      get { return moveinflg_; }
      set {
        moveinflg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "slotno" field.</summary>
    public const int SlotnoFieldNumber = 22;
    private string slotno_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Slotno {
      get { return slotno_; }
      set {
        slotno_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "showflag" field.</summary>
    public const int ShowflagFieldNumber = 23;
    private string showflag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Showflag {
      get { return showflag_; }
      set {
        showflag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fakeid" field.</summary>
    public const int FakeidFieldNumber = 24;
    private string fakeid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fakeid {
      get { return fakeid_; }
      set {
        fakeid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "erplotno" field.</summary>
    public const int ErplotnoFieldNumber = 25;
    private string erplotno_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Erplotno {
      get { return erplotno_; }
      set {
        erplotno_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APISHTEQo_a2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APISHTEQo_a2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Shtid != other.Shtid) return false;
      if (Shtstat != other.Shtstat) return false;
      if (Lotid != other.Lotid) return false;
      if (Spltid != other.Spltid) return false;
      if (Nxroutecate != other.Nxroutecate) return false;
      if (Nxrouteid != other.Nxrouteid) return false;
      if (Nxroutever != other.Nxroutever) return false;
      if (Cropeno != other.Cropeno) return false;
      if (Nxopeno != other.Nxopeno) return false;
      if (Nxopeid != other.Nxopeid) return false;
      if (Nxopever != other.Nxopever) return false;
      if (Nxopedsc != other.Nxopedsc) return false;
      if (Nxpeplvl != other.Nxpeplvl) return false;
      if (Nxrecipeid != other.Nxrecipeid) return false;
      if (Nxprocid != other.Nxprocid) return false;
      if (Productid != other.Productid) return false;
      if (Eccode != other.Eccode) return false;
      if (Unit != other.Unit) return false;
      if (Sgrid != other.Sgrid) return false;
      if (Shtcnt != other.Shtcnt) return false;
      if (Moveinflg != other.Moveinflg) return false;
      if (Slotno != other.Slotno) return false;
      if (Showflag != other.Showflag) return false;
      if (Fakeid != other.Fakeid) return false;
      if (Erplotno != other.Erplotno) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Shtid.Length != 0) hash ^= Shtid.GetHashCode();
      if (Shtstat.Length != 0) hash ^= Shtstat.GetHashCode();
      if (Lotid.Length != 0) hash ^= Lotid.GetHashCode();
      if (Spltid.Length != 0) hash ^= Spltid.GetHashCode();
      if (Nxroutecate.Length != 0) hash ^= Nxroutecate.GetHashCode();
      if (Nxrouteid.Length != 0) hash ^= Nxrouteid.GetHashCode();
      if (Nxroutever.Length != 0) hash ^= Nxroutever.GetHashCode();
      if (Cropeno.Length != 0) hash ^= Cropeno.GetHashCode();
      if (Nxopeno.Length != 0) hash ^= Nxopeno.GetHashCode();
      if (Nxopeid.Length != 0) hash ^= Nxopeid.GetHashCode();
      if (Nxopever.Length != 0) hash ^= Nxopever.GetHashCode();
      if (Nxopedsc.Length != 0) hash ^= Nxopedsc.GetHashCode();
      if (Nxpeplvl.Length != 0) hash ^= Nxpeplvl.GetHashCode();
      if (Nxrecipeid.Length != 0) hash ^= Nxrecipeid.GetHashCode();
      if (Nxprocid.Length != 0) hash ^= Nxprocid.GetHashCode();
      if (Productid.Length != 0) hash ^= Productid.GetHashCode();
      if (Eccode.Length != 0) hash ^= Eccode.GetHashCode();
      if (Unit.Length != 0) hash ^= Unit.GetHashCode();
      if (Sgrid.Length != 0) hash ^= Sgrid.GetHashCode();
      if (Shtcnt.Length != 0) hash ^= Shtcnt.GetHashCode();
      if (Moveinflg.Length != 0) hash ^= Moveinflg.GetHashCode();
      if (Slotno.Length != 0) hash ^= Slotno.GetHashCode();
      if (Showflag.Length != 0) hash ^= Showflag.GetHashCode();
      if (Fakeid.Length != 0) hash ^= Fakeid.GetHashCode();
      if (Erplotno.Length != 0) hash ^= Erplotno.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Shtid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Shtid);
      }
      if (Shtstat.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Shtstat);
      }
      if (Lotid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Lotid);
      }
      if (Spltid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Spltid);
      }
      if (Nxroutecate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Nxroutecate);
      }
      if (Nxrouteid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Nxrouteid);
      }
      if (Nxroutever.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Nxroutever);
      }
      if (Cropeno.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Cropeno);
      }
      if (Nxopeno.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Nxopeno);
      }
      if (Nxopeid.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Nxopeid);
      }
      if (Nxopever.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Nxopever);
      }
      if (Nxopedsc.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Nxopedsc);
      }
      if (Nxpeplvl.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Nxpeplvl);
      }
      if (Nxrecipeid.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Nxrecipeid);
      }
      if (Nxprocid.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Nxprocid);
      }
      if (Productid.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Productid);
      }
      if (Eccode.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Eccode);
      }
      if (Unit.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Unit);
      }
      if (Sgrid.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Sgrid);
      }
      if (Shtcnt.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Shtcnt);
      }
      if (Moveinflg.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Moveinflg);
      }
      if (Slotno.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Slotno);
      }
      if (Showflag.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(Showflag);
      }
      if (Fakeid.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(Fakeid);
      }
      if (Erplotno.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(Erplotno);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Shtid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Shtid);
      }
      if (Shtstat.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Shtstat);
      }
      if (Lotid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lotid);
      }
      if (Spltid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Spltid);
      }
      if (Nxroutecate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nxroutecate);
      }
      if (Nxrouteid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nxrouteid);
      }
      if (Nxroutever.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nxroutever);
      }
      if (Cropeno.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cropeno);
      }
      if (Nxopeno.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nxopeno);
      }
      if (Nxopeid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nxopeid);
      }
      if (Nxopever.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nxopever);
      }
      if (Nxopedsc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nxopedsc);
      }
      if (Nxpeplvl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nxpeplvl);
      }
      if (Nxrecipeid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nxrecipeid);
      }
      if (Nxprocid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nxprocid);
      }
      if (Productid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Productid);
      }
      if (Eccode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Eccode);
      }
      if (Unit.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Unit);
      }
      if (Sgrid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Sgrid);
      }
      if (Shtcnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Shtcnt);
      }
      if (Moveinflg.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Moveinflg);
      }
      if (Slotno.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Slotno);
      }
      if (Showflag.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Showflag);
      }
      if (Fakeid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Fakeid);
      }
      if (Erplotno.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Erplotno);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APISHTEQo_a2 other) {
      if (other == null) {
        return;
      }
      if (other.Shtid.Length != 0) {
        Shtid = other.Shtid;
      }
      if (other.Shtstat.Length != 0) {
        Shtstat = other.Shtstat;
      }
      if (other.Lotid.Length != 0) {
        Lotid = other.Lotid;
      }
      if (other.Spltid.Length != 0) {
        Spltid = other.Spltid;
      }
      if (other.Nxroutecate.Length != 0) {
        Nxroutecate = other.Nxroutecate;
      }
      if (other.Nxrouteid.Length != 0) {
        Nxrouteid = other.Nxrouteid;
      }
      if (other.Nxroutever.Length != 0) {
        Nxroutever = other.Nxroutever;
      }
      if (other.Cropeno.Length != 0) {
        Cropeno = other.Cropeno;
      }
      if (other.Nxopeno.Length != 0) {
        Nxopeno = other.Nxopeno;
      }
      if (other.Nxopeid.Length != 0) {
        Nxopeid = other.Nxopeid;
      }
      if (other.Nxopever.Length != 0) {
        Nxopever = other.Nxopever;
      }
      if (other.Nxopedsc.Length != 0) {
        Nxopedsc = other.Nxopedsc;
      }
      if (other.Nxpeplvl.Length != 0) {
        Nxpeplvl = other.Nxpeplvl;
      }
      if (other.Nxrecipeid.Length != 0) {
        Nxrecipeid = other.Nxrecipeid;
      }
      if (other.Nxprocid.Length != 0) {
        Nxprocid = other.Nxprocid;
      }
      if (other.Productid.Length != 0) {
        Productid = other.Productid;
      }
      if (other.Eccode.Length != 0) {
        Eccode = other.Eccode;
      }
      if (other.Unit.Length != 0) {
        Unit = other.Unit;
      }
      if (other.Sgrid.Length != 0) {
        Sgrid = other.Sgrid;
      }
      if (other.Shtcnt.Length != 0) {
        Shtcnt = other.Shtcnt;
      }
      if (other.Moveinflg.Length != 0) {
        Moveinflg = other.Moveinflg;
      }
      if (other.Slotno.Length != 0) {
        Slotno = other.Slotno;
      }
      if (other.Showflag.Length != 0) {
        Showflag = other.Showflag;
      }
      if (other.Fakeid.Length != 0) {
        Fakeid = other.Fakeid;
      }
      if (other.Erplotno.Length != 0) {
        Erplotno = other.Erplotno;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Shtid = input.ReadString();
            break;
          }
          case 18: {
            Shtstat = input.ReadString();
            break;
          }
          case 26: {
            Lotid = input.ReadString();
            break;
          }
          case 34: {
            Spltid = input.ReadString();
            break;
          }
          case 42: {
            Nxroutecate = input.ReadString();
            break;
          }
          case 50: {
            Nxrouteid = input.ReadString();
            break;
          }
          case 58: {
            Nxroutever = input.ReadString();
            break;
          }
          case 66: {
            Cropeno = input.ReadString();
            break;
          }
          case 74: {
            Nxopeno = input.ReadString();
            break;
          }
          case 82: {
            Nxopeid = input.ReadString();
            break;
          }
          case 90: {
            Nxopever = input.ReadString();
            break;
          }
          case 98: {
            Nxopedsc = input.ReadString();
            break;
          }
          case 106: {
            Nxpeplvl = input.ReadString();
            break;
          }
          case 114: {
            Nxrecipeid = input.ReadString();
            break;
          }
          case 122: {
            Nxprocid = input.ReadString();
            break;
          }
          case 130: {
            Productid = input.ReadString();
            break;
          }
          case 138: {
            Eccode = input.ReadString();
            break;
          }
          case 146: {
            Unit = input.ReadString();
            break;
          }
          case 154: {
            Sgrid = input.ReadString();
            break;
          }
          case 162: {
            Shtcnt = input.ReadString();
            break;
          }
          case 170: {
            Moveinflg = input.ReadString();
            break;
          }
          case 178: {
            Slotno = input.ReadString();
            break;
          }
          case 186: {
            Showflag = input.ReadString();
            break;
          }
          case 194: {
            Fakeid = input.ReadString();
            break;
          }
          case 202: {
            Erplotno = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
