// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MqGrpcProject.proto
// </auto-generated>
// Original file comments:
// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// dotnet run -f netcoreapp2.1
//  修改後要下這個指令
//  %UserProfile%\.nuget\packages\Grpc.Tools\1.15.0\tools\windows_x64\protoc.exe -I../../protos --csharp_out MqGrpcs --grpc_out MqGrpcs ../../protos/MqGrpcProject.proto --plugin=protoc-gen-grpc=%UserProfile%\.nuget\packages\Grpc.Tools\1.15.0\tools\windows_x64\grpc_csharp_plugin.exe
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace MqGrpcProject {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class MqGrpcs
  {
    static readonly string __ServiceName = "MqGrpcProject.MqGrpcs";

    static readonly grpc::Marshaller<global::MqGrpcProject.APCMTLST_Request> __Marshaller_MqGrpcProject_APCMTLST_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APCMTLST_Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MqGrpcProject.APCMTLST_Reply> __Marshaller_MqGrpcProject_APCMTLST_Reply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APCMTLST_Reply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MqGrpcProject.APMEQRSV_Request> __Marshaller_MqGrpcProject_APMEQRSV_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APMEQRSV_Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MqGrpcProject.APMEQRSV_Reply> __Marshaller_MqGrpcProject_APMEQRSV_Reply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APMEQRSV_Reply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MqGrpcProject.APIMTLST_Request> __Marshaller_MqGrpcProject_APIMTLST_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APIMTLST_Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MqGrpcProject.APIMTLST_Reply> __Marshaller_MqGrpcProject_APIMTLST_Reply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APIMTLST_Reply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MqGrpcProject.APISHTEQ_Request> __Marshaller_MqGrpcProject_APISHTEQ_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APISHTEQ_Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MqGrpcProject.APISHTEQ_Reply> __Marshaller_MqGrpcProject_APISHTEQ_Reply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APISHTEQ_Reply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MqGrpcProject.APLPRDBM_Request> __Marshaller_MqGrpcProject_APLPRDBM_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APLPRDBM_Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MqGrpcProject.APLPRDBM_Reply> __Marshaller_MqGrpcProject_APLPRDBM_Reply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APLPRDBM_Reply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MqGrpcProject.APLRSVPR_Request> __Marshaller_MqGrpcProject_APLRSVPR_Request = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APLRSVPR_Request.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MqGrpcProject.APLRSVPR_Reply> __Marshaller_MqGrpcProject_APLRSVPR_Reply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MqGrpcProject.APLRSVPR_Reply.Parser.ParseFrom);

    static readonly grpc::Method<global::MqGrpcProject.APCMTLST_Request, global::MqGrpcProject.APCMTLST_Reply> __Method_APCMTLST_Send = new grpc::Method<global::MqGrpcProject.APCMTLST_Request, global::MqGrpcProject.APCMTLST_Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "APCMTLST_Send",
        __Marshaller_MqGrpcProject_APCMTLST_Request,
        __Marshaller_MqGrpcProject_APCMTLST_Reply);

    static readonly grpc::Method<global::MqGrpcProject.APMEQRSV_Request, global::MqGrpcProject.APMEQRSV_Reply> __Method_APMEQRSV_Send = new grpc::Method<global::MqGrpcProject.APMEQRSV_Request, global::MqGrpcProject.APMEQRSV_Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "APMEQRSV_Send",
        __Marshaller_MqGrpcProject_APMEQRSV_Request,
        __Marshaller_MqGrpcProject_APMEQRSV_Reply);

    static readonly grpc::Method<global::MqGrpcProject.APIMTLST_Request, global::MqGrpcProject.APIMTLST_Reply> __Method_APIMTLST_Send = new grpc::Method<global::MqGrpcProject.APIMTLST_Request, global::MqGrpcProject.APIMTLST_Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "APIMTLST_Send",
        __Marshaller_MqGrpcProject_APIMTLST_Request,
        __Marshaller_MqGrpcProject_APIMTLST_Reply);

    static readonly grpc::Method<global::MqGrpcProject.APISHTEQ_Request, global::MqGrpcProject.APISHTEQ_Reply> __Method_APISHTEQ_Send = new grpc::Method<global::MqGrpcProject.APISHTEQ_Request, global::MqGrpcProject.APISHTEQ_Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "APISHTEQ_Send",
        __Marshaller_MqGrpcProject_APISHTEQ_Request,
        __Marshaller_MqGrpcProject_APISHTEQ_Reply);

    static readonly grpc::Method<global::MqGrpcProject.APLPRDBM_Request, global::MqGrpcProject.APLPRDBM_Reply> __Method_APLPRDBM_Send = new grpc::Method<global::MqGrpcProject.APLPRDBM_Request, global::MqGrpcProject.APLPRDBM_Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "APLPRDBM_Send",
        __Marshaller_MqGrpcProject_APLPRDBM_Request,
        __Marshaller_MqGrpcProject_APLPRDBM_Reply);

    static readonly grpc::Method<global::MqGrpcProject.APLRSVPR_Request, global::MqGrpcProject.APLRSVPR_Reply> __Method_APLRSVPR_Send = new grpc::Method<global::MqGrpcProject.APLRSVPR_Request, global::MqGrpcProject.APLRSVPR_Reply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "APLRSVPR_Send",
        __Marshaller_MqGrpcProject_APLRSVPR_Request,
        __Marshaller_MqGrpcProject_APLRSVPR_Reply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MqGrpcProject.MqGrpcProjectReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MqGrpcs</summary>
    public abstract partial class MqGrpcsBase
    {
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::MqGrpcProject.APCMTLST_Reply> APCMTLST_Send(global::MqGrpcProject.APCMTLST_Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MqGrpcProject.APMEQRSV_Reply> APMEQRSV_Send(global::MqGrpcProject.APMEQRSV_Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MqGrpcProject.APIMTLST_Reply> APIMTLST_Send(global::MqGrpcProject.APIMTLST_Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MqGrpcProject.APISHTEQ_Reply> APISHTEQ_Send(global::MqGrpcProject.APISHTEQ_Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MqGrpcProject.APLPRDBM_Reply> APLPRDBM_Send(global::MqGrpcProject.APLPRDBM_Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MqGrpcProject.APLRSVPR_Reply> APLRSVPR_Send(global::MqGrpcProject.APLRSVPR_Request request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MqGrpcs</summary>
    public partial class MqGrpcsClient : grpc::ClientBase<MqGrpcsClient>
    {
      /// <summary>Creates a new client for MqGrpcs</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MqGrpcsClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MqGrpcs that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MqGrpcsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MqGrpcsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MqGrpcsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::MqGrpcProject.APCMTLST_Reply APCMTLST_Send(global::MqGrpcProject.APCMTLST_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APCMTLST_Send(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::MqGrpcProject.APCMTLST_Reply APCMTLST_Send(global::MqGrpcProject.APCMTLST_Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_APCMTLST_Send, null, options, request);
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APCMTLST_Reply> APCMTLST_SendAsync(global::MqGrpcProject.APCMTLST_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APCMTLST_SendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sends a greeting
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APCMTLST_Reply> APCMTLST_SendAsync(global::MqGrpcProject.APCMTLST_Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_APCMTLST_Send, null, options, request);
      }
      public virtual global::MqGrpcProject.APMEQRSV_Reply APMEQRSV_Send(global::MqGrpcProject.APMEQRSV_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APMEQRSV_Send(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MqGrpcProject.APMEQRSV_Reply APMEQRSV_Send(global::MqGrpcProject.APMEQRSV_Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_APMEQRSV_Send, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APMEQRSV_Reply> APMEQRSV_SendAsync(global::MqGrpcProject.APMEQRSV_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APMEQRSV_SendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APMEQRSV_Reply> APMEQRSV_SendAsync(global::MqGrpcProject.APMEQRSV_Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_APMEQRSV_Send, null, options, request);
      }
      public virtual global::MqGrpcProject.APIMTLST_Reply APIMTLST_Send(global::MqGrpcProject.APIMTLST_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APIMTLST_Send(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MqGrpcProject.APIMTLST_Reply APIMTLST_Send(global::MqGrpcProject.APIMTLST_Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_APIMTLST_Send, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APIMTLST_Reply> APIMTLST_SendAsync(global::MqGrpcProject.APIMTLST_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APIMTLST_SendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APIMTLST_Reply> APIMTLST_SendAsync(global::MqGrpcProject.APIMTLST_Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_APIMTLST_Send, null, options, request);
      }
      public virtual global::MqGrpcProject.APISHTEQ_Reply APISHTEQ_Send(global::MqGrpcProject.APISHTEQ_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APISHTEQ_Send(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MqGrpcProject.APISHTEQ_Reply APISHTEQ_Send(global::MqGrpcProject.APISHTEQ_Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_APISHTEQ_Send, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APISHTEQ_Reply> APISHTEQ_SendAsync(global::MqGrpcProject.APISHTEQ_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APISHTEQ_SendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APISHTEQ_Reply> APISHTEQ_SendAsync(global::MqGrpcProject.APISHTEQ_Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_APISHTEQ_Send, null, options, request);
      }
      public virtual global::MqGrpcProject.APLPRDBM_Reply APLPRDBM_Send(global::MqGrpcProject.APLPRDBM_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APLPRDBM_Send(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MqGrpcProject.APLPRDBM_Reply APLPRDBM_Send(global::MqGrpcProject.APLPRDBM_Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_APLPRDBM_Send, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APLPRDBM_Reply> APLPRDBM_SendAsync(global::MqGrpcProject.APLPRDBM_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APLPRDBM_SendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APLPRDBM_Reply> APLPRDBM_SendAsync(global::MqGrpcProject.APLPRDBM_Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_APLPRDBM_Send, null, options, request);
      }
      public virtual global::MqGrpcProject.APLRSVPR_Reply APLRSVPR_Send(global::MqGrpcProject.APLRSVPR_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APLRSVPR_Send(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MqGrpcProject.APLRSVPR_Reply APLRSVPR_Send(global::MqGrpcProject.APLRSVPR_Request request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_APLRSVPR_Send, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APLRSVPR_Reply> APLRSVPR_SendAsync(global::MqGrpcProject.APLRSVPR_Request request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return APLRSVPR_SendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MqGrpcProject.APLRSVPR_Reply> APLRSVPR_SendAsync(global::MqGrpcProject.APLRSVPR_Request request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_APLRSVPR_Send, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MqGrpcsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MqGrpcsClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MqGrpcsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_APCMTLST_Send, serviceImpl.APCMTLST_Send)
          .AddMethod(__Method_APMEQRSV_Send, serviceImpl.APMEQRSV_Send)
          .AddMethod(__Method_APIMTLST_Send, serviceImpl.APIMTLST_Send)
          .AddMethod(__Method_APISHTEQ_Send, serviceImpl.APISHTEQ_Send)
          .AddMethod(__Method_APLPRDBM_Send, serviceImpl.APLPRDBM_Send)
          .AddMethod(__Method_APLRSVPR_Send, serviceImpl.APLRSVPR_Send).Build();
    }

  }
}
#endregion
