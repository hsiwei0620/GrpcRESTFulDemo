// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: APCMTLSTio.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MqGrpcProject {

  /// <summary>Holder for reflection information generated from APCMTLSTio.proto</summary>
  public static partial class APCMTLSTioReflection {

    #region Descriptor
    /// <summary>File descriptor for APCMTLSTio.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static APCMTLSTioReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBBUENNVExTVGlvLnByb3RvEg1NcUdycGNQcm9qZWN0IrQBChBBUENNVExT",
            "VF9SZXF1ZXN0EhIKCmNsbW10c3R0eXAYASABKAkSDwoHY2xtZGF0ZRgCIAEo",
            "CRIPCgdjbG10aW1lGAMgASgJEg4KBnVzZXJpZBgEIAEoCRINCgVib21pZBgF",
            "IAEoCRIPCgdtdHJsY250GAYgASgJEigKBGlhcnkYByADKAsyGi5NcUdycGNQ",
            "cm9qZWN0LkFQQ01UTFNUaV9hEhAKCHNlcnZlcmlwGAggASgJIs8DCgtBUENN",
            "VExTVGlfYRIVCg1tdHJscHJvZHVjdGlkGAEgASgJEhEKCW10cmxsb3RpZBgC",
            "IAEoCRINCgVzZXFubxgDIAEoCRITCgtjb250YWluZXJpZBgEIAEoCRIQCght",
            "dHJsc3RhdBgFIAEoCRIPCgdtdHJscXR5GAYgASgJEhEKCXBlcnNodHF0eRgH",
            "IAEoCRIOCgZzaHRjbnQYCCABKAkSDwoHY29tbWVudBgJIAEoCRISCgpzY3By",
            "c25jYXRlGAogASgJEhIKCnNjcHJzbmNvZGUYCyABKAkSEAoIZGVwdGNvZGUY",
            "DCABKAkSDgoGc2NwcXR5GA0gASgJEhEKCXRhcmVxcHRpZBgOIAEoCRISCgpj",
            "cmVhdGVkYXRlGA8gASgJEhIKCmV4cGlyZWRhdGUYECABKAkSEwoLdmFsaWRw",
            "ZXJpb2QYESABKAkSEQoJbWludXNlcXR5GBIgASgJEgwKBGZsYWcYEyABKAkS",
            "EgoKc2FsZXNvcmRlchgUIAEoCRIOCgZsaW5laWQYFSABKAkSEAoIaWFyeTJj",
            "bnQYFiABKAkSKgoFaWFyeTIYFyADKAsyGy5NcUdycGNQcm9qZWN0LkFQQ01U",
            "TFNUaV9hMiJvCgxBUENNVExTVGlfYTISGAoQdXNlbXRybHByb2R1Y3RpZBgB",
            "IAEoCRIUCgx1c2VtdHJsbG90aWQYAiABKAkSDgoGdXNlcXR5GAMgASgJEhAK",
            "CHVzZXNlcW5vGAQgASgJEg0KBWxvdGlkGAUgASgJImEKDkFQQ01UTFNUX1Jl",
            "cGx5Eg0KBXRyeGlkGAEgASgJEg4KBnR5cGVpZBgCIAEoCRIPCgdydG5jb2Rl",
            "GAMgASgJEg8KB3J0bm1lc2cYBCABKAkSDgoGZXJybXNnGAUgASgJQjMKFWlv",
            "LmdycGMuTXFHcnBjUHJvamVjdEISTXFHcnBjUHJvamVjdFByb3RvUAGiAgNI",
            "TFdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MqGrpcProject.APCMTLST_Request), global::MqGrpcProject.APCMTLST_Request.Parser, new[]{ "Clmmtsttyp", "Clmdate", "Clmtime", "Userid", "Bomid", "Mtrlcnt", "Iary", "Serverip" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MqGrpcProject.APCMTLSTi_a), global::MqGrpcProject.APCMTLSTi_a.Parser, new[]{ "Mtrlproductid", "Mtrllotid", "Seqno", "Containerid", "Mtrlstat", "Mtrlqty", "Pershtqty", "Shtcnt", "Comment", "Scprsncate", "Scprsncode", "Deptcode", "Scpqty", "Tareqptid", "Createdate", "Expiredate", "Validperiod", "Minuseqty", "Flag", "Salesorder", "Lineid", "Iary2Cnt", "Iary2" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MqGrpcProject.APCMTLSTi_a2), global::MqGrpcProject.APCMTLSTi_a2.Parser, new[]{ "Usemtrlproductid", "Usemtrllotid", "Useqty", "Useseqno", "Lotid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MqGrpcProject.APCMTLST_Reply), global::MqGrpcProject.APCMTLST_Reply.Parser, new[]{ "Trxid", "Typeid", "Rtncode", "Rtnmesg", "Errmsg" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class APCMTLST_Request : pb::IMessage<APCMTLST_Request> {
    private static readonly pb::MessageParser<APCMTLST_Request> _parser = new pb::MessageParser<APCMTLST_Request>(() => new APCMTLST_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APCMTLST_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MqGrpcProject.APCMTLSTioReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLST_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLST_Request(APCMTLST_Request other) : this() {
      clmmtsttyp_ = other.clmmtsttyp_;
      clmdate_ = other.clmdate_;
      clmtime_ = other.clmtime_;
      userid_ = other.userid_;
      bomid_ = other.bomid_;
      mtrlcnt_ = other.mtrlcnt_;
      iary_ = other.iary_.Clone();
      serverip_ = other.serverip_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLST_Request Clone() {
      return new APCMTLST_Request(this);
    }

    /// <summary>Field number for the "clmmtsttyp" field.</summary>
    public const int ClmmtsttypFieldNumber = 1;
    private string clmmtsttyp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Clmmtsttyp {
      get { return clmmtsttyp_; }
      set {
        clmmtsttyp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clmdate" field.</summary>
    public const int ClmdateFieldNumber = 2;
    private string clmdate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Clmdate {
      get { return clmdate_; }
      set {
        clmdate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clmtime" field.</summary>
    public const int ClmtimeFieldNumber = 3;
    private string clmtime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Clmtime {
      get { return clmtime_; }
      set {
        clmtime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 4;
    private string userid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bomid" field.</summary>
    public const int BomidFieldNumber = 5;
    private string bomid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bomid {
      get { return bomid_; }
      set {
        bomid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mtrlcnt" field.</summary>
    public const int MtrlcntFieldNumber = 6;
    private string mtrlcnt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mtrlcnt {
      get { return mtrlcnt_; }
      set {
        mtrlcnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iary" field.</summary>
    public const int IaryFieldNumber = 7;
    private static readonly pb::FieldCodec<global::MqGrpcProject.APCMTLSTi_a> _repeated_iary_codec
        = pb::FieldCodec.ForMessage(58, global::MqGrpcProject.APCMTLSTi_a.Parser);
    private readonly pbc::RepeatedField<global::MqGrpcProject.APCMTLSTi_a> iary_ = new pbc::RepeatedField<global::MqGrpcProject.APCMTLSTi_a>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MqGrpcProject.APCMTLSTi_a> Iary {
      get { return iary_; }
    }

    /// <summary>Field number for the "serverip" field.</summary>
    public const int ServeripFieldNumber = 8;
    private string serverip_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Serverip {
      get { return serverip_; }
      set {
        serverip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APCMTLST_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APCMTLST_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Clmmtsttyp != other.Clmmtsttyp) return false;
      if (Clmdate != other.Clmdate) return false;
      if (Clmtime != other.Clmtime) return false;
      if (Userid != other.Userid) return false;
      if (Bomid != other.Bomid) return false;
      if (Mtrlcnt != other.Mtrlcnt) return false;
      if(!iary_.Equals(other.iary_)) return false;
      if (Serverip != other.Serverip) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Clmmtsttyp.Length != 0) hash ^= Clmmtsttyp.GetHashCode();
      if (Clmdate.Length != 0) hash ^= Clmdate.GetHashCode();
      if (Clmtime.Length != 0) hash ^= Clmtime.GetHashCode();
      if (Userid.Length != 0) hash ^= Userid.GetHashCode();
      if (Bomid.Length != 0) hash ^= Bomid.GetHashCode();
      if (Mtrlcnt.Length != 0) hash ^= Mtrlcnt.GetHashCode();
      hash ^= iary_.GetHashCode();
      if (Serverip.Length != 0) hash ^= Serverip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Clmmtsttyp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Clmmtsttyp);
      }
      if (Clmdate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Clmdate);
      }
      if (Clmtime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Clmtime);
      }
      if (Userid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Userid);
      }
      if (Bomid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bomid);
      }
      if (Mtrlcnt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Mtrlcnt);
      }
      iary_.WriteTo(output, _repeated_iary_codec);
      if (Serverip.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Serverip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Clmmtsttyp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clmmtsttyp);
      }
      if (Clmdate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clmdate);
      }
      if (Clmtime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Clmtime);
      }
      if (Userid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (Bomid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bomid);
      }
      if (Mtrlcnt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mtrlcnt);
      }
      size += iary_.CalculateSize(_repeated_iary_codec);
      if (Serverip.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Serverip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APCMTLST_Request other) {
      if (other == null) {
        return;
      }
      if (other.Clmmtsttyp.Length != 0) {
        Clmmtsttyp = other.Clmmtsttyp;
      }
      if (other.Clmdate.Length != 0) {
        Clmdate = other.Clmdate;
      }
      if (other.Clmtime.Length != 0) {
        Clmtime = other.Clmtime;
      }
      if (other.Userid.Length != 0) {
        Userid = other.Userid;
      }
      if (other.Bomid.Length != 0) {
        Bomid = other.Bomid;
      }
      if (other.Mtrlcnt.Length != 0) {
        Mtrlcnt = other.Mtrlcnt;
      }
      iary_.Add(other.iary_);
      if (other.Serverip.Length != 0) {
        Serverip = other.Serverip;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Clmmtsttyp = input.ReadString();
            break;
          }
          case 18: {
            Clmdate = input.ReadString();
            break;
          }
          case 26: {
            Clmtime = input.ReadString();
            break;
          }
          case 34: {
            Userid = input.ReadString();
            break;
          }
          case 42: {
            Bomid = input.ReadString();
            break;
          }
          case 50: {
            Mtrlcnt = input.ReadString();
            break;
          }
          case 58: {
            iary_.AddEntriesFrom(input, _repeated_iary_codec);
            break;
          }
          case 66: {
            Serverip = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class APCMTLSTi_a : pb::IMessage<APCMTLSTi_a> {
    private static readonly pb::MessageParser<APCMTLSTi_a> _parser = new pb::MessageParser<APCMTLSTi_a>(() => new APCMTLSTi_a());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APCMTLSTi_a> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MqGrpcProject.APCMTLSTioReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLSTi_a() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLSTi_a(APCMTLSTi_a other) : this() {
      mtrlproductid_ = other.mtrlproductid_;
      mtrllotid_ = other.mtrllotid_;
      seqno_ = other.seqno_;
      containerid_ = other.containerid_;
      mtrlstat_ = other.mtrlstat_;
      mtrlqty_ = other.mtrlqty_;
      pershtqty_ = other.pershtqty_;
      shtcnt_ = other.shtcnt_;
      comment_ = other.comment_;
      scprsncate_ = other.scprsncate_;
      scprsncode_ = other.scprsncode_;
      deptcode_ = other.deptcode_;
      scpqty_ = other.scpqty_;
      tareqptid_ = other.tareqptid_;
      createdate_ = other.createdate_;
      expiredate_ = other.expiredate_;
      validperiod_ = other.validperiod_;
      minuseqty_ = other.minuseqty_;
      flag_ = other.flag_;
      salesorder_ = other.salesorder_;
      lineid_ = other.lineid_;
      iary2Cnt_ = other.iary2Cnt_;
      iary2_ = other.iary2_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLSTi_a Clone() {
      return new APCMTLSTi_a(this);
    }

    /// <summary>Field number for the "mtrlproductid" field.</summary>
    public const int MtrlproductidFieldNumber = 1;
    private string mtrlproductid_ = "";
    /// <summary>
    ///       Material Product ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mtrlproductid {
      get { return mtrlproductid_; }
      set {
        mtrlproductid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mtrllotid" field.</summary>
    public const int MtrllotidFieldNumber = 2;
    private string mtrllotid_ = "";
    /// <summary>
    ///       Material Lot ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mtrllotid {
      get { return mtrllotid_; }
      set {
        mtrllotid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seqno" field.</summary>
    public const int SeqnoFieldNumber = 3;
    private string seqno_ = "";
    /// <summary>
    ///       Sequence NO
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Seqno {
      get { return seqno_; }
      set {
        seqno_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "containerid" field.</summary>
    public const int ContaineridFieldNumber = 4;
    private string containerid_ = "";
    /// <summary>
    ///       M1.00 Container ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Containerid {
      get { return containerid_; }
      set {
        containerid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mtrlstat" field.</summary>
    public const int MtrlstatFieldNumber = 5;
    private string mtrlstat_ = "";
    /// <summary>
    ///       Material Status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mtrlstat {
      get { return mtrlstat_; }
      set {
        mtrlstat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mtrlqty" field.</summary>
    public const int MtrlqtyFieldNumber = 6;
    private string mtrlqty_ = "";
    /// <summary>
    ///       Material Lot Count
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mtrlqty {
      get { return mtrlqty_; }
      set {
        mtrlqty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pershtqty" field.</summary>
    public const int PershtqtyFieldNumber = 7;
    private string pershtqty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pershtqty {
      get { return pershtqty_; }
      set {
        pershtqty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shtcnt" field.</summary>
    public const int ShtcntFieldNumber = 8;
    private string shtcnt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Shtcnt {
      get { return shtcnt_; }
      set {
        shtcnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 9;
    private string comment_ = "";
    /// <summary>
    ///       Comment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scprsncate" field.</summary>
    public const int ScprsncateFieldNumber = 10;
    private string scprsncate_ = "";
    /// <summary>
    ///       Scrap Reason Code Category
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Scprsncate {
      get { return scprsncate_; }
      set {
        scprsncate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scprsncode" field.</summary>
    public const int ScprsncodeFieldNumber = 11;
    private string scprsncode_ = "";
    /// <summary>
    ///       Scrap Reason code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Scprsncode {
      get { return scprsncode_; }
      set {
        scprsncode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deptcode" field.</summary>
    public const int DeptcodeFieldNumber = 12;
    private string deptcode_ = "";
    /// <summary>
    ///       Department Code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Deptcode {
      get { return deptcode_; }
      set {
        deptcode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scpqty" field.</summary>
    public const int ScpqtyFieldNumber = 13;
    private string scpqty_ = "";
    /// <summary>
    ///       Scrap Quantity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Scpqty {
      get { return scpqty_; }
      set {
        scpqty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tareqptid" field.</summary>
    public const int TareqptidFieldNumber = 14;
    private string tareqptid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tareqptid {
      get { return tareqptid_; }
      set {
        tareqptid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdate" field.</summary>
    public const int CreatedateFieldNumber = 15;
    private string createdate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Createdate {
      get { return createdate_; }
      set {
        createdate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiredate" field.</summary>
    public const int ExpiredateFieldNumber = 16;
    private string expiredate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Expiredate {
      get { return expiredate_; }
      set {
        expiredate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "validperiod" field.</summary>
    public const int ValidperiodFieldNumber = 17;
    private string validperiod_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Validperiod {
      get { return validperiod_; }
      set {
        validperiod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "minuseqty" field.</summary>
    public const int MinuseqtyFieldNumber = 18;
    private string minuseqty_ = "";
    /// <summary>
    ///       Hsiwei Add min use qty
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Minuseqty {
      get { return minuseqty_; }
      set {
        minuseqty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 19;
    private string flag_ = "";
    /// <summary>
    ///       flag=P 配藥,flag=C 切膠
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Flag {
      get { return flag_; }
      set {
        flag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "salesorder" field.</summary>
    public const int SalesorderFieldNumber = 20;
    private string salesorder_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Salesorder {
      get { return salesorder_; }
      set {
        salesorder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lineid" field.</summary>
    public const int LineidFieldNumber = 21;
    private string lineid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lineid {
      get { return lineid_; }
      set {
        lineid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iary2cnt" field.</summary>
    public const int Iary2CntFieldNumber = 22;
    private string iary2Cnt_ = "";
    /// <summary>
    ///       Material  
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Iary2Cnt {
      get { return iary2Cnt_; }
      set {
        iary2Cnt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iary2" field.</summary>
    public const int Iary2FieldNumber = 23;
    private static readonly pb::FieldCodec<global::MqGrpcProject.APCMTLSTi_a2> _repeated_iary2_codec
        = pb::FieldCodec.ForMessage(186, global::MqGrpcProject.APCMTLSTi_a2.Parser);
    private readonly pbc::RepeatedField<global::MqGrpcProject.APCMTLSTi_a2> iary2_ = new pbc::RepeatedField<global::MqGrpcProject.APCMTLSTi_a2>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MqGrpcProject.APCMTLSTi_a2> Iary2 {
      get { return iary2_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APCMTLSTi_a);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APCMTLSTi_a other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mtrlproductid != other.Mtrlproductid) return false;
      if (Mtrllotid != other.Mtrllotid) return false;
      if (Seqno != other.Seqno) return false;
      if (Containerid != other.Containerid) return false;
      if (Mtrlstat != other.Mtrlstat) return false;
      if (Mtrlqty != other.Mtrlqty) return false;
      if (Pershtqty != other.Pershtqty) return false;
      if (Shtcnt != other.Shtcnt) return false;
      if (Comment != other.Comment) return false;
      if (Scprsncate != other.Scprsncate) return false;
      if (Scprsncode != other.Scprsncode) return false;
      if (Deptcode != other.Deptcode) return false;
      if (Scpqty != other.Scpqty) return false;
      if (Tareqptid != other.Tareqptid) return false;
      if (Createdate != other.Createdate) return false;
      if (Expiredate != other.Expiredate) return false;
      if (Validperiod != other.Validperiod) return false;
      if (Minuseqty != other.Minuseqty) return false;
      if (Flag != other.Flag) return false;
      if (Salesorder != other.Salesorder) return false;
      if (Lineid != other.Lineid) return false;
      if (Iary2Cnt != other.Iary2Cnt) return false;
      if(!iary2_.Equals(other.iary2_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mtrlproductid.Length != 0) hash ^= Mtrlproductid.GetHashCode();
      if (Mtrllotid.Length != 0) hash ^= Mtrllotid.GetHashCode();
      if (Seqno.Length != 0) hash ^= Seqno.GetHashCode();
      if (Containerid.Length != 0) hash ^= Containerid.GetHashCode();
      if (Mtrlstat.Length != 0) hash ^= Mtrlstat.GetHashCode();
      if (Mtrlqty.Length != 0) hash ^= Mtrlqty.GetHashCode();
      if (Pershtqty.Length != 0) hash ^= Pershtqty.GetHashCode();
      if (Shtcnt.Length != 0) hash ^= Shtcnt.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (Scprsncate.Length != 0) hash ^= Scprsncate.GetHashCode();
      if (Scprsncode.Length != 0) hash ^= Scprsncode.GetHashCode();
      if (Deptcode.Length != 0) hash ^= Deptcode.GetHashCode();
      if (Scpqty.Length != 0) hash ^= Scpqty.GetHashCode();
      if (Tareqptid.Length != 0) hash ^= Tareqptid.GetHashCode();
      if (Createdate.Length != 0) hash ^= Createdate.GetHashCode();
      if (Expiredate.Length != 0) hash ^= Expiredate.GetHashCode();
      if (Validperiod.Length != 0) hash ^= Validperiod.GetHashCode();
      if (Minuseqty.Length != 0) hash ^= Minuseqty.GetHashCode();
      if (Flag.Length != 0) hash ^= Flag.GetHashCode();
      if (Salesorder.Length != 0) hash ^= Salesorder.GetHashCode();
      if (Lineid.Length != 0) hash ^= Lineid.GetHashCode();
      if (Iary2Cnt.Length != 0) hash ^= Iary2Cnt.GetHashCode();
      hash ^= iary2_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mtrlproductid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Mtrlproductid);
      }
      if (Mtrllotid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Mtrllotid);
      }
      if (Seqno.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Seqno);
      }
      if (Containerid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Containerid);
      }
      if (Mtrlstat.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Mtrlstat);
      }
      if (Mtrlqty.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Mtrlqty);
      }
      if (Pershtqty.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Pershtqty);
      }
      if (Shtcnt.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Shtcnt);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Comment);
      }
      if (Scprsncate.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Scprsncate);
      }
      if (Scprsncode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Scprsncode);
      }
      if (Deptcode.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Deptcode);
      }
      if (Scpqty.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Scpqty);
      }
      if (Tareqptid.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Tareqptid);
      }
      if (Createdate.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Createdate);
      }
      if (Expiredate.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Expiredate);
      }
      if (Validperiod.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Validperiod);
      }
      if (Minuseqty.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Minuseqty);
      }
      if (Flag.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Flag);
      }
      if (Salesorder.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(Salesorder);
      }
      if (Lineid.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Lineid);
      }
      if (Iary2Cnt.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(Iary2Cnt);
      }
      iary2_.WriteTo(output, _repeated_iary2_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mtrlproductid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mtrlproductid);
      }
      if (Mtrllotid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mtrllotid);
      }
      if (Seqno.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Seqno);
      }
      if (Containerid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Containerid);
      }
      if (Mtrlstat.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mtrlstat);
      }
      if (Mtrlqty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mtrlqty);
      }
      if (Pershtqty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pershtqty);
      }
      if (Shtcnt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Shtcnt);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (Scprsncate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Scprsncate);
      }
      if (Scprsncode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Scprsncode);
      }
      if (Deptcode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Deptcode);
      }
      if (Scpqty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Scpqty);
      }
      if (Tareqptid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tareqptid);
      }
      if (Createdate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Createdate);
      }
      if (Expiredate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Expiredate);
      }
      if (Validperiod.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Validperiod);
      }
      if (Minuseqty.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Minuseqty);
      }
      if (Flag.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Flag);
      }
      if (Salesorder.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Salesorder);
      }
      if (Lineid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Lineid);
      }
      if (Iary2Cnt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Iary2Cnt);
      }
      size += iary2_.CalculateSize(_repeated_iary2_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APCMTLSTi_a other) {
      if (other == null) {
        return;
      }
      if (other.Mtrlproductid.Length != 0) {
        Mtrlproductid = other.Mtrlproductid;
      }
      if (other.Mtrllotid.Length != 0) {
        Mtrllotid = other.Mtrllotid;
      }
      if (other.Seqno.Length != 0) {
        Seqno = other.Seqno;
      }
      if (other.Containerid.Length != 0) {
        Containerid = other.Containerid;
      }
      if (other.Mtrlstat.Length != 0) {
        Mtrlstat = other.Mtrlstat;
      }
      if (other.Mtrlqty.Length != 0) {
        Mtrlqty = other.Mtrlqty;
      }
      if (other.Pershtqty.Length != 0) {
        Pershtqty = other.Pershtqty;
      }
      if (other.Shtcnt.Length != 0) {
        Shtcnt = other.Shtcnt;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      if (other.Scprsncate.Length != 0) {
        Scprsncate = other.Scprsncate;
      }
      if (other.Scprsncode.Length != 0) {
        Scprsncode = other.Scprsncode;
      }
      if (other.Deptcode.Length != 0) {
        Deptcode = other.Deptcode;
      }
      if (other.Scpqty.Length != 0) {
        Scpqty = other.Scpqty;
      }
      if (other.Tareqptid.Length != 0) {
        Tareqptid = other.Tareqptid;
      }
      if (other.Createdate.Length != 0) {
        Createdate = other.Createdate;
      }
      if (other.Expiredate.Length != 0) {
        Expiredate = other.Expiredate;
      }
      if (other.Validperiod.Length != 0) {
        Validperiod = other.Validperiod;
      }
      if (other.Minuseqty.Length != 0) {
        Minuseqty = other.Minuseqty;
      }
      if (other.Flag.Length != 0) {
        Flag = other.Flag;
      }
      if (other.Salesorder.Length != 0) {
        Salesorder = other.Salesorder;
      }
      if (other.Lineid.Length != 0) {
        Lineid = other.Lineid;
      }
      if (other.Iary2Cnt.Length != 0) {
        Iary2Cnt = other.Iary2Cnt;
      }
      iary2_.Add(other.iary2_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Mtrlproductid = input.ReadString();
            break;
          }
          case 18: {
            Mtrllotid = input.ReadString();
            break;
          }
          case 26: {
            Seqno = input.ReadString();
            break;
          }
          case 34: {
            Containerid = input.ReadString();
            break;
          }
          case 42: {
            Mtrlstat = input.ReadString();
            break;
          }
          case 50: {
            Mtrlqty = input.ReadString();
            break;
          }
          case 58: {
            Pershtqty = input.ReadString();
            break;
          }
          case 66: {
            Shtcnt = input.ReadString();
            break;
          }
          case 74: {
            Comment = input.ReadString();
            break;
          }
          case 82: {
            Scprsncate = input.ReadString();
            break;
          }
          case 90: {
            Scprsncode = input.ReadString();
            break;
          }
          case 98: {
            Deptcode = input.ReadString();
            break;
          }
          case 106: {
            Scpqty = input.ReadString();
            break;
          }
          case 114: {
            Tareqptid = input.ReadString();
            break;
          }
          case 122: {
            Createdate = input.ReadString();
            break;
          }
          case 130: {
            Expiredate = input.ReadString();
            break;
          }
          case 138: {
            Validperiod = input.ReadString();
            break;
          }
          case 146: {
            Minuseqty = input.ReadString();
            break;
          }
          case 154: {
            Flag = input.ReadString();
            break;
          }
          case 162: {
            Salesorder = input.ReadString();
            break;
          }
          case 170: {
            Lineid = input.ReadString();
            break;
          }
          case 178: {
            Iary2Cnt = input.ReadString();
            break;
          }
          case 186: {
            iary2_.AddEntriesFrom(input, _repeated_iary2_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class APCMTLSTi_a2 : pb::IMessage<APCMTLSTi_a2> {
    private static readonly pb::MessageParser<APCMTLSTi_a2> _parser = new pb::MessageParser<APCMTLSTi_a2>(() => new APCMTLSTi_a2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APCMTLSTi_a2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MqGrpcProject.APCMTLSTioReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLSTi_a2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLSTi_a2(APCMTLSTi_a2 other) : this() {
      usemtrlproductid_ = other.usemtrlproductid_;
      usemtrllotid_ = other.usemtrllotid_;
      useqty_ = other.useqty_;
      useseqno_ = other.useseqno_;
      lotid_ = other.lotid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLSTi_a2 Clone() {
      return new APCMTLSTi_a2(this);
    }

    /// <summary>Field number for the "usemtrlproductid" field.</summary>
    public const int UsemtrlproductidFieldNumber = 1;
    private string usemtrlproductid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Usemtrlproductid {
      get { return usemtrlproductid_; }
      set {
        usemtrlproductid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "usemtrllotid" field.</summary>
    public const int UsemtrllotidFieldNumber = 2;
    private string usemtrllotid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Usemtrllotid {
      get { return usemtrllotid_; }
      set {
        usemtrllotid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "useqty" field.</summary>
    public const int UseqtyFieldNumber = 3;
    private string useqty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Useqty {
      get { return useqty_; }
      set {
        useqty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "useseqno" field.</summary>
    public const int UseseqnoFieldNumber = 4;
    private string useseqno_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Useseqno {
      get { return useseqno_; }
      set {
        useseqno_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lotid" field.</summary>
    public const int LotidFieldNumber = 5;
    private string lotid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Lotid {
      get { return lotid_; }
      set {
        lotid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APCMTLSTi_a2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APCMTLSTi_a2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Usemtrlproductid != other.Usemtrlproductid) return false;
      if (Usemtrllotid != other.Usemtrllotid) return false;
      if (Useqty != other.Useqty) return false;
      if (Useseqno != other.Useseqno) return false;
      if (Lotid != other.Lotid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Usemtrlproductid.Length != 0) hash ^= Usemtrlproductid.GetHashCode();
      if (Usemtrllotid.Length != 0) hash ^= Usemtrllotid.GetHashCode();
      if (Useqty.Length != 0) hash ^= Useqty.GetHashCode();
      if (Useseqno.Length != 0) hash ^= Useseqno.GetHashCode();
      if (Lotid.Length != 0) hash ^= Lotid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Usemtrlproductid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Usemtrlproductid);
      }
      if (Usemtrllotid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Usemtrllotid);
      }
      if (Useqty.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Useqty);
      }
      if (Useseqno.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Useseqno);
      }
      if (Lotid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Lotid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Usemtrlproductid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Usemtrlproductid);
      }
      if (Usemtrllotid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Usemtrllotid);
      }
      if (Useqty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Useqty);
      }
      if (Useseqno.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Useseqno);
      }
      if (Lotid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Lotid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APCMTLSTi_a2 other) {
      if (other == null) {
        return;
      }
      if (other.Usemtrlproductid.Length != 0) {
        Usemtrlproductid = other.Usemtrlproductid;
      }
      if (other.Usemtrllotid.Length != 0) {
        Usemtrllotid = other.Usemtrllotid;
      }
      if (other.Useqty.Length != 0) {
        Useqty = other.Useqty;
      }
      if (other.Useseqno.Length != 0) {
        Useseqno = other.Useseqno;
      }
      if (other.Lotid.Length != 0) {
        Lotid = other.Lotid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Usemtrlproductid = input.ReadString();
            break;
          }
          case 18: {
            Usemtrllotid = input.ReadString();
            break;
          }
          case 26: {
            Useqty = input.ReadString();
            break;
          }
          case 34: {
            Useseqno = input.ReadString();
            break;
          }
          case 42: {
            Lotid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class APCMTLST_Reply : pb::IMessage<APCMTLST_Reply> {
    private static readonly pb::MessageParser<APCMTLST_Reply> _parser = new pb::MessageParser<APCMTLST_Reply>(() => new APCMTLST_Reply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APCMTLST_Reply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MqGrpcProject.APCMTLSTioReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLST_Reply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLST_Reply(APCMTLST_Reply other) : this() {
      trxid_ = other.trxid_;
      typeid_ = other.typeid_;
      rtncode_ = other.rtncode_;
      rtnmesg_ = other.rtnmesg_;
      errmsg_ = other.errmsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APCMTLST_Reply Clone() {
      return new APCMTLST_Reply(this);
    }

    /// <summary>Field number for the "trxid" field.</summary>
    public const int TrxidFieldNumber = 1;
    private string trxid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Trxid {
      get { return trxid_; }
      set {
        trxid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "typeid" field.</summary>
    public const int TypeidFieldNumber = 2;
    private string typeid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Typeid {
      get { return typeid_; }
      set {
        typeid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rtncode" field.</summary>
    public const int RtncodeFieldNumber = 3;
    private string rtncode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rtncode {
      get { return rtncode_; }
      set {
        rtncode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rtnmesg" field.</summary>
    public const int RtnmesgFieldNumber = 4;
    private string rtnmesg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rtnmesg {
      get { return rtnmesg_; }
      set {
        rtnmesg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "errmsg" field.</summary>
    public const int ErrmsgFieldNumber = 5;
    private string errmsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Errmsg {
      get { return errmsg_; }
      set {
        errmsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APCMTLST_Reply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APCMTLST_Reply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Trxid != other.Trxid) return false;
      if (Typeid != other.Typeid) return false;
      if (Rtncode != other.Rtncode) return false;
      if (Rtnmesg != other.Rtnmesg) return false;
      if (Errmsg != other.Errmsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Trxid.Length != 0) hash ^= Trxid.GetHashCode();
      if (Typeid.Length != 0) hash ^= Typeid.GetHashCode();
      if (Rtncode.Length != 0) hash ^= Rtncode.GetHashCode();
      if (Rtnmesg.Length != 0) hash ^= Rtnmesg.GetHashCode();
      if (Errmsg.Length != 0) hash ^= Errmsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Trxid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Trxid);
      }
      if (Typeid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Typeid);
      }
      if (Rtncode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Rtncode);
      }
      if (Rtnmesg.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Rtnmesg);
      }
      if (Errmsg.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Errmsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Trxid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Trxid);
      }
      if (Typeid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Typeid);
      }
      if (Rtncode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rtncode);
      }
      if (Rtnmesg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rtnmesg);
      }
      if (Errmsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Errmsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APCMTLST_Reply other) {
      if (other == null) {
        return;
      }
      if (other.Trxid.Length != 0) {
        Trxid = other.Trxid;
      }
      if (other.Typeid.Length != 0) {
        Typeid = other.Typeid;
      }
      if (other.Rtncode.Length != 0) {
        Rtncode = other.Rtncode;
      }
      if (other.Rtnmesg.Length != 0) {
        Rtnmesg = other.Rtnmesg;
      }
      if (other.Errmsg.Length != 0) {
        Errmsg = other.Errmsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Trxid = input.ReadString();
            break;
          }
          case 18: {
            Typeid = input.ReadString();
            break;
          }
          case 26: {
            Rtncode = input.ReadString();
            break;
          }
          case 34: {
            Rtnmesg = input.ReadString();
            break;
          }
          case 42: {
            Errmsg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
